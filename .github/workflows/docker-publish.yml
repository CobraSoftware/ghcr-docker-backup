# name: Docker Multi-Arch with Tags

# on:
#   workflow_dispatch:

# env:
#   # Use docker.io for Docker Hub if empty
#   REGISTRY: ghcr.io
#   # github.repository as <account>/<repo>
#   IMAGE_NAME: ${{ github.repository }}

# jobs:
#   pull-and-push:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#       id-token: write

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Log into Docker Hub
#         uses: docker/login-action@v3
#         with:
#           registry: docker.io
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_PASSWORD }}

#       - name: Log into GHCR
#         uses: docker/login-action@v3
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Set up QEMU for multi-arch builds
#         uses: docker/setup-qemu-action@v2
#         with:
#           platforms: linux/amd64,linux/arm64

#       - name: Set up Docker Buildx for multi-arch builds
#         uses: docker/setup-buildx-action@v2

#       - name: Pull and Push Tagged Images
#         env:
#           IMAGE_TAGS: |
#             nginx:bookworm,latest,mainline-alpine,alpine-perl,stable-alpine,stable-alpine-perl
#             redis:bookworm,latest
#             busybox:unstable-uclibc,unstable-glibc,stable-uclibc,stable-glibc,stable,latest
#             mysql:lts-oracle,latest,lts,8.0-debian
#             alpine:latest,edge
#             mariadb:lts,latest
#             ubuntu:rolling,latest
#             postgres:latest,alpine,bookworm
#             node:latest,lts,bookworm,alpine
#             httpd:latest,bookworm,alpine
#             openjdk:latest
#             golang:bookworm,bullseye,alpine
#         run: |
#             while IFS= read -r line; do
#               image=$(echo $line | cut -d: -f1)
#               tags=$(echo $line | cut -d: -f2 | tr ',' ' ')
#               for tag in $tags; do
#                 echo "Processing $image:$tag..."
#                 docker pull $image:$tag
#                 # Convert the repository and tag to lowercase before tagging and pushing
#                 lower_image_name=$(echo "${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')
#                 lower_tag=$(echo "$tag" | tr '[:upper:]' '[:lower:]')
#                 docker tag $image:$tag ${{ env.REGISTRY }}/$lower_image_name:$image-$lower_tag
#                 docker push ${{ env.REGISTRY }}/$lower_image_name:$image-$lower_tag
#               done
#             done <<< "$IMAGE_TAGS"


name: Docker Multi-Arch with Tags

on:
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # Ensure the IMAGE_NAME is converted to lowercase
  IMAGE_NAME: ${{ github.repository | toLower }}

jobs:
  pull-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Log into GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set up QEMU for multi-arch builds
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx for multi-arch builds
        uses: docker/setup-buildx-action@v2

      - name: Pull and Push Tagged Images
        env:
          IMAGE_TAGS: |
            nginx:bookworm,latest,mainline-alpine,alpine-perl,stable-alpine,stable-alpine-perl
            redis:bookworm,latest
            busybox:unstable-uclibc,unstable-glibc,stable-uclibc,stable-glibc,stable,latest
            mysql:lts-oracle,latest,lts,8.0-debian
            alpine:latest,edge
            mariadb:lts,latest
            ubuntu:rolling,latest
            postgres:latest,alpine,bookworm
            node:latest,lts,bookworm,alpine
            httpd:latest,bookworm,alpine
            openjdk:latest
            golang:bookworm,bullseye,alpine
        run: |
          while IFS= read -r line; do
            image=$(echo $line | cut -d: -f1)
            tags=$(echo $line | cut -d: -f2 | tr ',' ' ')
            for tag in $tags; do
              echo "Processing $image:$tag..."
              docker pull $image:$tag
              # Convert the repository and tag to lowercase before tagging and pushing
              lower_image_name=$(echo "${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')
              lower_tag=$(echo "$tag" | tr '[:upper:]' '[:lower:]')
              docker tag $image:$tag ${{ env.REGISTRY }}/$lower_image_name:$image-$lower_tag
              docker push ${{ env.REGISTRY }}/$lower_image_name:$image-$lower_tag
            done
          done <<< "$IMAGE_TAGS"